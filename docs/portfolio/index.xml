<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio on Liam Bessell</title>
    <link>https://lbess.github.io/portfolio/</link>
    <description>Recent content in Portfolio on Liam Bessell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lbess.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Daylighting in Virtual Reality</title>
      <link>https://lbess.github.io/portfolio/daylighting-vr/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lbess.github.io/portfolio/daylighting-vr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reverse Engineering Smart Contracts</title>
      <link>https://lbess.github.io/portfolio/re-smart-contracts/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lbess.github.io/portfolio/re-smart-contracts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>N-Body Simulation</title>
      <link>https://lbess.github.io/portfolio/nbody-simulation/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lbess.github.io/portfolio/nbody-simulation/</guid>
      <description>Video presentation
N-Body Problem How do we simulate the movement of n-bodies when each body affects every other body? Examples: Gravitational forces on stars, network visualization, molecular dynamics, and more.
Naive Simulation Before attempting the Barnes-Hut simulation I first implemented the much easier Naive n-body simulation. I quickly discovered that the Naive simulation couldn&amp;rsquo;t effectively run simulations with more than ~2000 bodies in real time. This is actually what kindled my interest in pursuing Barnes-Hut; I wanted to see massive galaxies move around in real time!</description>
    </item>
    
    <item>
      <title>Raytracer</title>
      <link>https://lbess.github.io/portfolio/raytracer/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lbess.github.io/portfolio/raytracer/</guid>
      <description>One of the projects in my computer graphics class was to create an offline ray tracer from scratch in C++.
Technical Details This was a difficult yet immensely rewarding project. It was difficult in that I started from scratch and had to learn how light behaves in the real world in order to simulate it accurately. One skillset among many you quickly sharpen in computer graphics is math, specifically with regards to linear algebra and vectors.</description>
    </item>
    
  </channel>
</rss>